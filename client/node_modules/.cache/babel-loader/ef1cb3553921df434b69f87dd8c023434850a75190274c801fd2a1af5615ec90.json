{"ast":null,"code":"var _jsxFileName = \"D:\\\\code\\\\pern\\\\blog\\\\client\\\\src\\\\components\\\\ListBlogs.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\n// import EditBlog from \"./EditBlog\";\nimport DeleteBlog from \"./DeleteBlog\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListBlogs = () => {\n  _s();\n  const [blogs, setBlogs] = useState([]); // Initialize with an empty array\n  const [showDeleted, setShowDeleted] = useState(false);\n  const [page, setPage] = useState(1);\n  const navigate = useNavigate(); //to disable the view button when the blog is deleted\n\n  //delete function\n  //   const deleteBlog = async (id) => {\n  //     try {\n  //       const deleteBlog = await fetch(`http://localhost:5000/blogs/${id}`, {\n  //         method: \"DELETE\",\n  //       });\n  //       setBlogs(blogs.filter((blog) => blog.blog_id !== id));\n  //     } catch (err) {\n  //       console.error(err.message);\n  //     }\n  //   };\n\n  //get all blogs\n  // const getBlogs = async () => {\n  //   try {\n  //     const response = await fetch(\"http://localhost:5000/blogs\");\n  //     const jsonData = await response.json();\n  //     //console.log(jsonData);\n  //     setBlogs(jsonData);\n  //   } catch (err) {\n  //     console.error(err.message);\n  //   }\n  // };\n\n  // useEffect(() => {\n  //   getBlogs();\n  // }, []);\n\n  const getBlogs = async page => {\n    try {\n      const response = await fetch(`http://localhost:5000/blogs?page=${page}`);\n      const jsonData = await response.json();\n      setBlogs(jsonData);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n  useEffect(() => {\n    getBlogs(page);\n  }, [page]);\n\n  //filter deleted blogs\n  // const filteredBlogs = blogs.filter((blog) =>\n  //   showDeleted ? blog.published_at === null || blog.deleted_at !== null : true\n  // );\n\n  // const filteredBlogs = showDeleted\n  //   ? blogs\n  //   : blogs\n  //       // .filter(\n  //       //   (blog) => blog.published_at !== null && blog.deleted_at === null\n  //       // )\n  //       .sort((a, b) => new Date(b.published_at) - new Date(a.published_at));\n\n  const filteredBlogs = showDeleted ? blogs : blogs.sort((a, b) => {\n    // If both blogs are not deleted and published, sort by published_at\n    if (a.deleted_at === null && b.deleted_at === null && a.published_at !== null && b.published_at !== null) {\n      return new Date(b.published_at) - new Date(a.published_at);\n    }\n    // If one blog is not deleted and published and the other is not, sort by published status\n    else if (a.deleted_at === null && a.published_at !== null || b.deleted_at === null && b.published_at !== null) {\n      return b.deleted_at === null && b.published_at !== null ? 1 : -1;\n    }\n    // If neither blog is not deleted and published, sort by published_at or created_at\n    else {\n      if (a.published_at && b.published_at) {\n        return new Date(b.published_at) - new Date(a.published_at);\n      } else if (a.published_at || b.published_at) {\n        return a.published_at ? -1 : 1;\n      } else {\n        return new Date(b.created_at) - new Date(a.created_at);\n      }\n    }\n  });\n\n  //get status\n  const getBlogStatus = blog => {\n    if (blog.published_at === null && blog.deleted_at !== null) {\n      return \"Deleted, never published\";\n    } else if (blog.published_at === null) {\n      return \"Unpublished\";\n    } else if (blog.deleted_at !== null) {\n      return \"Deleted\";\n    } else {\n      return \"Published\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blog-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"blog-grid\",\n        children: filteredBlogs.map(blog => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"blog-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: blog.blog_title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: blog.blog_image,\n            alt: blog.blog_title,\n            className: \"blog-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: getBlogStatus(blog)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                if (blog.deleted_at === null) {\n                  navigate(`/blogs/${blog.blog_slug}`);\n                }\n              },\n              disabled: blog.deleted_at !== null,\n              className: \"btn btn-primary\",\n              children: \"View\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(DeleteBlog, {\n              blog: blog\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this)]\n        }, blog.blog_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPage(page - 1),\n        disabled: page === 1,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPage(page + 1),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s(ListBlogs, \"F3eP98lWXdWHWcPAVxhWTctzrDE=\", false, function () {\n  return [useNavigate];\n});\n_c = ListBlogs;\nexport default ListBlogs;\nvar _c;\n$RefreshReg$(_c, \"ListBlogs\");","map":{"version":3,"names":["React","Fragment","useEffect","useState","Link","useNavigate","DeleteBlog","jsxDEV","_jsxDEV","ListBlogs","_s","blogs","setBlogs","showDeleted","setShowDeleted","page","setPage","navigate","getBlogs","response","fetch","jsonData","json","err","console","error","message","filteredBlogs","sort","a","b","deleted_at","published_at","Date","created_at","getBlogStatus","blog","children","className","map","blog_title","fileName","_jsxFileName","lineNumber","columnNumber","src","blog_image","alt","onClick","blog_slug","disabled","blog_id","_c","$RefreshReg$"],"sources":["D:/code/pern/blog/client/src/components/ListBlogs.js"],"sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n// import EditBlog from \"./EditBlog\";\r\nimport DeleteBlog from \"./DeleteBlog\";\r\n\r\nconst ListBlogs = () => {\r\n  const [blogs, setBlogs] = useState([]); // Initialize with an empty array\r\n  const [showDeleted, setShowDeleted] = useState(false);\r\n  const [page, setPage] = useState(1);\r\n\r\n  const navigate = useNavigate(); //to disable the view button when the blog is deleted\r\n\r\n  //delete function\r\n  //   const deleteBlog = async (id) => {\r\n  //     try {\r\n  //       const deleteBlog = await fetch(`http://localhost:5000/blogs/${id}`, {\r\n  //         method: \"DELETE\",\r\n  //       });\r\n  //       setBlogs(blogs.filter((blog) => blog.blog_id !== id));\r\n  //     } catch (err) {\r\n  //       console.error(err.message);\r\n  //     }\r\n  //   };\r\n\r\n  //get all blogs\r\n  // const getBlogs = async () => {\r\n  //   try {\r\n  //     const response = await fetch(\"http://localhost:5000/blogs\");\r\n  //     const jsonData = await response.json();\r\n  //     //console.log(jsonData);\r\n  //     setBlogs(jsonData);\r\n  //   } catch (err) {\r\n  //     console.error(err.message);\r\n  //   }\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   getBlogs();\r\n  // }, []);\r\n\r\n  const getBlogs = async (page) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/blogs?page=${page}`);\r\n      const jsonData = await response.json();\r\n      setBlogs(jsonData);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBlogs(page);\r\n  }, [page]);\r\n\r\n  //filter deleted blogs\r\n  // const filteredBlogs = blogs.filter((blog) =>\r\n  //   showDeleted ? blog.published_at === null || blog.deleted_at !== null : true\r\n  // );\r\n\r\n  // const filteredBlogs = showDeleted\r\n  //   ? blogs\r\n  //   : blogs\r\n  //       // .filter(\r\n  //       //   (blog) => blog.published_at !== null && blog.deleted_at === null\r\n  //       // )\r\n  //       .sort((a, b) => new Date(b.published_at) - new Date(a.published_at));\r\n\r\n  const filteredBlogs = showDeleted\r\n    ? blogs\r\n    : blogs.sort((a, b) => {\r\n        // If both blogs are not deleted and published, sort by published_at\r\n        if (\r\n          a.deleted_at === null &&\r\n          b.deleted_at === null &&\r\n          a.published_at !== null &&\r\n          b.published_at !== null\r\n        ) {\r\n          return new Date(b.published_at) - new Date(a.published_at);\r\n        }\r\n        // If one blog is not deleted and published and the other is not, sort by published status\r\n        else if (\r\n          (a.deleted_at === null && a.published_at !== null) ||\r\n          (b.deleted_at === null && b.published_at !== null)\r\n        ) {\r\n          return b.deleted_at === null && b.published_at !== null ? 1 : -1;\r\n        }\r\n        // If neither blog is not deleted and published, sort by published_at or created_at\r\n        else {\r\n          if (a.published_at && b.published_at) {\r\n            return new Date(b.published_at) - new Date(a.published_at);\r\n          } else if (a.published_at || b.published_at) {\r\n            return a.published_at ? -1 : 1;\r\n          } else {\r\n            return new Date(b.created_at) - new Date(a.created_at);\r\n          }\r\n        }\r\n      });\r\n\r\n  //get status\r\n  const getBlogStatus = (blog) => {\r\n    if (blog.published_at === null && blog.deleted_at !== null) {\r\n      return \"Deleted, never published\";\r\n    } else if (blog.published_at === null) {\r\n      return \"Unpublished\";\r\n    } else if (blog.deleted_at !== null) {\r\n      return \"Deleted\";\r\n    } else {\r\n      return \"Published\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {/* <label>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={showDeleted}\r\n          onChange={(e) => setShowDeleted(e.target.checked)}\r\n        />\r\n        Show deleted/unpublished blogs\r\n      </label> */}\r\n\r\n      <div className=\"blog-container\">\r\n        <div className=\"blog-grid\">\r\n          {filteredBlogs.map((blog) => (\r\n            <div key={blog.blog_id} className=\"blog-item\">\r\n              <h5>{blog.blog_title}</h5>\r\n              <img\r\n                src={blog.blog_image}\r\n                alt={blog.blog_title}\r\n                className=\"blog-image\"\r\n              />\r\n\r\n              <p>{getBlogStatus(blog)}</p>\r\n              <div className=\"button-container\">\r\n                <button\r\n                  onClick={() => {\r\n                    if (blog.deleted_at === null) {\r\n                      navigate(`/blogs/${blog.blog_slug}`);\r\n                    }\r\n                  }}\r\n                  disabled={blog.deleted_at !== null}\r\n                  className=\"btn btn-primary\"\r\n                >\r\n                  View\r\n                </button>\r\n                <DeleteBlog blog={blog} />\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"pagination-buttons\">\r\n        <button onClick={() => setPage(page - 1)} disabled={page === 1}>\r\n          Previous\r\n        </button>\r\n        <button onClick={() => setPage(page + 1)}>Next</button>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ListBlogs;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}